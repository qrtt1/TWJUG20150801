buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.amazonaws:aws-java-sdk-lambda:1.+'
        classpath 'com.amazonaws:aws-java-sdk-s3:1.10.8'
    }

    repositories {
        mavenCentral()
            maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "jp.classmethod.aws:gradle-aws-plugin:0.24"
    }
}



repositories { jcenter() }

apply plugin: 'java'
apply plugin: 'eclipse'

apply plugin: "jp.classmethod.aws.s3"
apply plugin: "jp.classmethod.aws.lambda"


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

dependencies {
    compile 'com.amazonaws:aws-lambda-java-core:1.0.0'
    compile 'com.amazonaws:aws-lambda-java-events:1.0.0'

    compile 'com.amazonaws:aws-java-sdk-lambda:1.+'
    compile 'commons-lang:commons-lang:2.6'
    compile 'commons-io:commons-io:2.+'
}

task buildZip(type: Zip, dependsOn: build) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
    eachFile {
        if (it.name.contains(".so.")) fileMode 0755
        if (it.name.contains("ffprobe")) fileMode 0755
        if (it.name.contains("ffmpeg")) fileMode 0755
    }
}



aws {
    profileName = 'qty'
    region = 'ap-northeast-1'
}

import jp.classmethod.aws.gradle.s3.AmazonS3FileUploadTask
task uploadLambdaPackage(type: AmazonS3FileUploadTask, dependsOn: buildZip) {
    file file("build/distributions/${project.name}.zip")
    bucketName 'qty.lambda'
    key 'def2.zip'
    overwrite true
}

import jp.classmethod.aws.gradle.lambda.AWSLambdaUpdateFunctionCodeTask;
import jp.classmethod.aws.gradle.lambda.S3File;

['HelloLambda', 'VideoPreviewTaskGenerator', 'VideoPreviewGenerator'].each { name ->
    task "updateLambdaFunction$name" (type: AWSLambdaUpdateFunctionCodeTask, dependsOn: uploadLambdaPackage) {
        description = "Update labmda function $name"
        functionName = name
        s3File = new S3File()
        s3File.bucketName = 'qty.lambda'
        s3File.key = 'def2.zip'
    }
}

